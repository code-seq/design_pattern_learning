在 JavaScript 中，我们可以使用 `toISOString()` 方法将日期转换为 UTC 时间，并使用内置的 `Date` 对象来处理日期和时间，并使用其方法来格式化日期。以下是将日期格式化为 "MM/DD/YYYY h:mm:ss A" 格式的示例代码：

```javascript
// 创建一个新的 Date 对象
const now = new Date();

// 将日期转换为 UTC 时间并获取月、日、年、小时、分钟、秒
const month = (new Date(now.toISOString())).getUTCMonth() + 1; // 月份从 0 开始计数，所以要 +1
const day = (new Date(now.toISOString())).getUTCDate();
const year = (new Date(now.toISOString())).getUTCFullYear();
let hours = (new Date(now.toISOString())).getUTCHours();
const minutes = (new Date(now.toISOString())).getUTCMinutes();
const seconds = (new Date(now.toISOString())).getUTCSeconds();

// 判断上午或下午
const amOrPm = hours < 12 ? 'AM' : 'PM';

// 转换为 12 小时制
hours = hours % 12;
hours = hours ? hours : 12; // 如果小时为 0，则显示为 12

// 将日期和时间格式化为字符串
const formattedDate = `${month.toString().padStart(2, '0')}/${day.toString().padStart(2, '0')}/${year} ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')} ${amOrPm}`;

console.log(formattedDate); // 输出格式化后的日期字符串 (UTC 时间)
```

这段代码将输出类似于 "07/26/2023 7:32:50 AM" 的日期字符串，并且是 UTC 时间。其中，`toISOString()` 方法将日期转换为 ISO 格式，并且是 UTC 时间。然后，我们根据 ISO 格式的日期对象再次创建一个新的 `Date` 对象，并按照上述示例中的方法来格式化输出。
